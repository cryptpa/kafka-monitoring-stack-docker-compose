version: '2.1'

services:

  grafana:
    image: "grafana/grafana"
    ports:
     - "3000:3000"
    environment:
      GF_PATHS_DATA : /var/lib/grafana
      GF_SECURITY_ADMIN_PASSWORD : kafka
    volumes:
     - ./grafana/provisioning:/etc/grafana/provisioning
     - ./grafana/dashboards:/var/lib/grafana/dashboards
    container_name: grafana
    depends_on:
     - prometheus
    networks:
     - paritex-kakfa 

  prometheus:
    image: "prom/prometheus"
    ports:
     - "9090:9090"
    volumes:
     - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml"
    container_name: prometheus
    networks:
     - paritex-kakfa

  jmx-kafka101:
    image: "sscaling/jmx-prometheus-exporter"
    ports:
     - "5556:5556"
    environment:
     CONFIG_YML : "/etc/jmx_exporter/config.yml"
    volumes:
     - ./etc/jmx_exporter/config_kafka101.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka101
    depends_on:
     - kafka1
    networks:
     - paritex-kakfa

  jmx-kafka102:
    image: "sscaling/jmx-prometheus-exporter"
    ports:
     - "5557:5556"
    environment:
     CONFIG_YML : "/etc/jmx_exporter/config.yml"
    volumes:
     - ./etc/jmx_exporter/config_kafka102.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka102
    depends_on:
     - kafka2
    networks:
     - paritex-kakfa

  jmx-kafka103:
    image: "sscaling/jmx-prometheus-exporter"
    ports:
     - "5558:5556"
    environment:
     CONFIG_YML : "/etc/jmx_exporter/config.yml"
    volumes:
     - ./etc/jmx_exporter/config_kafka103.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka103
    depends_on:
     - kafka3
    networks:
     - paritex-kakfa

  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    volumes:
      - ../zk-multiple-kafka-multiple/zoo1/data:/data
      - ../zk-multiple-kafka-multiple/zoo1/datalog:/datalog
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888   
    networks:
     - paritex-kakfa

  zoo2:
    image: zookeeper:3.4.9
    hostname: zoo2
    container_name: zoo2
    ports:
      - "2182:2182"
    volumes:
      - ../zk-multiple-kafka-multiple/zoo2/data:/data
      - ../zk-multiple-kafka-multiple/zoo2/datalog:/datalog
    environment:
        ZOO_MY_ID: 2
        ZOO_PORT: 2182
        ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888    
    networks:
     - paritex-kakfa

  zoo3:
    image: zookeeper:3.4.9
    hostname: zoo3
    container_name: zoo3
    ports:
      - "2183:2183"
    volumes:
      - ../zk-multiple-kafka-multiple/zoo3/data:/data
      - ../zk-multiple-kafka-multiple/zoo3/datalog:/datalog

    environment:
        ZOO_MY_ID: 3
        ZOO_PORT: 2183
        ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888   
    networks:
     - paritex-kakfa


  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    container_name: kafka1
    ports:
      - 9092:9092
      - 9992:9992
    environment:
      KAFKA_JMX_PORT: 9992
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka1:19092,LISTENER_EXTERNAL://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:19092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
    volumes:
      - ./zk-multiple-kafka-multiple/kafka1/data:/var/lib/kafka/data
     
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
     - paritex-kakfa

  kafka2:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka2
    container_name: kafka2
    ports:
      - 9093:9093
      - 9993:9993
    environment:
      KAFKA_JMX_PORT: 9993
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka2:19093,LISTENER_EXTERNAL://kafka2:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3 
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka2:19093
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
    volumes:
      - ./zk-multiple-kafka-multiple/kafka2/data:/var/lib/kafka/data
     
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
     - paritex-kakfa

  kafka3:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka3
    container_name: kafka3

    ports:
      - 9994:9994
    environment:
      KAFKA_JMX_PORT: 9994
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka3:19094,LISTENER_EXTERNAL://kafka3:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3 
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka3:19094
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'

    volumes:
      - ./zk-multiple-kafka-multiple/kafka3/data:/var/lib/kafka/data
     
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
     - paritex-kakfa

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19092,kafka2:19093,kafka3:19094"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka1"
      - "kafka2"
      - "kafka3"
    networks:
     - paritex-kakfa

networks:
  paritex-kakfa:
   driver: bridge
